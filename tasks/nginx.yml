---

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - cmake
      - make
      - gcc
      - g++
      - unzip
      - libpcre3-dev
      - zlib1g-dev
      - libxslt-dev
      - libssl-dev
    state: present
    update_cache: true
    cache_valid_time: 3600
  become: true

- name: Install libmodsecurity
  ansible.builtin.apt:
    name:
      - libmodsecurity3
      - libmodsecurity-dev
  become: true
  when: "'http_modsecurity' in nginx_load_modules"

- name: Add modsecurity
  ansible.builtin.set_fact:
    nginx_compile_modsecurity: --add-dynamic-module=/tmp/modsecurity-nginx-v{{ ngx_modsecurity_version }}
  when: "'http_modsecurity' in nginx_load_modules"

- name: Fetch sources
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /tmp
    remote_src: true
  with_items:
    - http://nginx.org/download/nginx-{{ nginx_version }}.tar.gz

- name: Cleanups
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/ngx_brotli-{{ ngx_brotli_version }}
    - /tmp/headers-more-nginx-module-{{ ngx_headers_more_version }}
    - /tmp/ngx-fancyindex-{{ ngx_fancyindex_version }}
    - /tmp/modsecurity-nginx-v{{ ngx_modsecurity_version }}
    - /tmp/njs-{{ ngx_njs_version }}
  become: true

- name: Download ngx_*
  ansible.builtin.unarchive:
    src: "{{ item }}"
    dest: /tmp
    remote_src: true
  with_items:
    - https://github.com/openresty/headers-more-nginx-module/archive/v{{ ngx_headers_more_version }}.zip
    - https://github.com/aperezdc/ngx-fancyindex/archive/v{{ ngx_fancyindex_version }}.tar.gz
    - https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v{{ ngx_modsecurity_version }}/modsecurity-nginx-v{{ ngx_modsecurity_version }}.tar.gz
    - https://github.com/nginx/njs/archive/refs/tags/{{ ngx_njs_version }}.tar.gz

- name: Fetch brotli
  ansible.builtin.git:
    repo: https://github.com/google/ngx_brotli.git
    dest: /tmp/ngx_brotli-{{ ngx_brotli_version }}/
    recursive: true
    update: true
    depth: 1
    version: '{{ ngx_brotli_version }}'

- name: Create brotli/out
  ansible.builtin.file:
    path: /tmp/ngx_brotli-{{ ngx_brotli_version }}/deps/brotli/out
    state: directory
    mode: '0755'

- name: Compile brotli
  ansible.builtin.command: '{{ item }}'
  args:
    chdir: /tmp/ngx_brotli-{{ ngx_brotli_version }}/deps/brotli/out
  with_items:
    - >-
      cmake
        -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF
        -DCMAKE_C_FLAGS="-Ofast -m64 -march=native -mtune=native -flto -funroll-loops -ffunction-sections -fdata-sections -Wl,--gc-sections"
        -DCMAKE_CXX_FLAGS="-Ofast -m64 -march=native -mtune=native -flto -funroll-loops -ffunction-sections -fdata-sections -Wl,--gc-sections"
        -DCMAKE_INSTALL_PREFIX=./installed ..
    - cmake --build . --config Release --target brotlienc
  changed_when: true
  failed_when: false

- name: Make clean
  ansible.builtin.command: make clean
  args:
    chdir: /tmp/nginx-{{ nginx_version }}
  changed_when: true
  failed_when: false

- name: Configure
  ansible.builtin.command: >
    ./configure
    --prefix=/usr/share/nginx
    --sbin-path=/usr/sbin/nginx
    --conf-path=/etc/nginx/nginx.conf
    --http-log-path=/var/log/nginx/access.log
    --error-log-path=/var/log/nginx/error.log
    --lock-path=/var/lock/nginx.lock
    --pid-path=/run/nginx.pid
    --http-client-body-temp-path=/var/cache/nginx/client
    --http-proxy-temp-path=/var/cache/nginx/proxy
    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi
    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi
    --http-scgi-temp-path=/var/cache/nginx/scgi
    --without-select_module
    --without-poll_module
    --with-threads
    --with-file-aio
    --with-http_ssl_module
    --with-openssl
    --with-stream
    --with-http_realip_module
    --with-http_stub_status_module
    --with-http_v2_module
    --with-http_gunzip_module
    --with-http_gzip_static_module
    --with-http_auth_request_module
    --with-http_secure_link_module
    --without-http_memcached_module
    --with-compat
    --add-module=/tmp/ngx_brotli-{{ ngx_brotli_version }}
    --add-module=/tmp/headers-more-nginx-module-{{ ngx_headers_more_version }}
    --add-dynamic-module=/tmp/ngx-fancyindex-{{ ngx_fancyindex_version }}
    --add-dynamic-module=/tmp/njs-{{ ngx_njs_version }}/nginx
    {{ nginx_compile_modsecurity }}
  args:
    chdir: /tmp/nginx-{{ nginx_version }}
  environment:
    CFLAGS: '{{ nginx_build_cflags }}'
    LDFLAGS: '{{ nginx_build_ldflags }}'
  changed_when: true

- name: Make
  ansible.builtin.command: make -j{{ nginx_make_jobs }}
  args:
    chdir: /tmp/nginx-{{ nginx_version }}
  environment:
    CFLAGS: '{{ nginx_build_cflags }}'
    LDFLAGS: '{{ nginx_build_ldflags }}'
  changed_when: true

- name: Install
  ansible.builtin.command: make install
  args:
    chdir: /tmp/nginx-{{ nginx_version }}
  environment:
    CFLAGS: '{{ nginx_build_cflags }}'
    LDFLAGS: '{{ nginx_build_ldflags }}'
  changed_when: true
  become: true
  notify: Restart_nginx
