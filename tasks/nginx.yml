---

- name: Install dependencies
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - make
    - gcc
    - g++
    - libc6-dev
  become: yes

- name: Download source code(s)
  get_url: url={{ item }} dest=/tmp/
  with_items:
    - http://nginx.org/download/nginx-{{ nginx_version }}.tar.gz
    - http://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-{{ pcre_version }}.tar.gz
    - https://www.openssl.org/source/openssl-{{ openssl_version }}.tar.gz
    - http://zlib.net/zlib-{{ zlib_version }}.tar.gz

- name: Extract archive(s)
  command: chdir=/tmp/ tar xfz {{ item }} creates=/tmp/{{ item | replace(".tar.gz", "") }}
  with_items:
    - nginx-{{ nginx_version }}.tar.gz
    - pcre-{{ pcre_version }}.tar.gz
    - zlib-{{ zlib_version }}.tar.gz
    - openssl-{{ openssl_version }}.tar.gz

- name: Make clean
  command: chdir=/tmp/nginx-{{ nginx_version }} make clean
  ignore_errors: yes

- name: Configure
  command: >
    ./configure
    --prefix=/usr/share/nginx
    --sbin-path=/usr/sbin/nginx
    --conf-path=/etc/nginx/nginx.conf
    --http-log-path=/var/log/nginx/access.log
    --error-log-path=/var/log/nginx/error.log
    --lock-path=/var/lock/nginx.lock
    --pid-path=/run/nginx.pid
    --http-client-body-temp-path=/var/cache/nginx/client
    --http-proxy-temp-path=/var/cache/nginx/proxy
    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi
    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi
    --http-scgi-temp-path=/var/cache/nginx/scgi
    --without-select_module
    --without-poll_module
    --with-pcre=../pcre-{{ pcre_version }}
    --with-pcre-jit
    --with-zlib=../zlib-{{ zlib_version }}
    --with-zlib-asm=pentiumpro
    --with-http_ssl_module
    --with-openssl=../openssl-{{ openssl_version }}
    --with-http_addition_module
    --with-http_realip_module
    --with-http_sub_module
    --with-http_flv_module
    --with-http_mp4_module
    --with-http_gunzip_module
    --with-http_gzip_static_module
    --with-http_random_index_module
    --with-http_secure_link_module
    --with-http_stub_status_module
    --with-http_auth_request_module
    --with-http_stub_status_module
    --with-threads
    --with-file-aio
    --with-http_v2_module
    --with-ipv6
    --without-http_memcached_module
    chdir=/tmp/nginx-{{ nginx_version }}

- name: Make
  command: chdir=/tmp/nginx-{{ nginx_version }} make

- name: Install
  command: chdir=/tmp/nginx-{{ nginx_version }} make install
  become: yes

- name: Create folders
  file: path={{ item }} state=directory mode=0755 recurse=yes
  with_items:
    - /var/cache/nginx
    - /etc/nginx/common
    - /etc/nginx/vhosts
  become: yes

- name: Add logrotate config
  copy: src=logrotate dest=/etc/logrotate.d/nginx
  become: yes

- name: Add service
  copy: src=nginx.service dest=/lib/systemd/system/nginx.service mode=0644
  become: yes

- name: Reload systemd
  command: systemctl daemon-reload
  become: yes

- name: Enable nginx
  command: systemctl enable nginx
  become: yes

- name: Add htpasswd script
  copy: src=htpasswd.sh dest=/usr/local/bin/htpasswd mode="a+x"
  become: yes

- name: Adding base config files
  copy: force=yes src={{ item }} dest=/etc/nginx/{{ item }}
  with_items:
    - fastcgi.conf
    - fastcgi_params
    - mime.types
    - nginx.conf
    - common/client-performance.conf
    - common/client-performance-inline.conf
    - common/cloudflare.conf
    - common/drop.conf
    - common/munin-node.conf
    - common/secure-ssl.conf
  become: yes

- name: Add default vhost config
  copy: force=no src=vhost.conf dest=/etc/nginx/vhosts/default.conf
  become: yes

- name: Reload nginx
  command: systemctl reload-or-restart nginx
  become: yes